<?php 

class M_CFSAPDOSO extends MY_Model 
{
	public function __construct()
	{
		parent::__construct(); 
		$this->data['table_name']	= LEGACY_MDM . '.VIEW_CF_SAP_DO_SO A';
		$this->data['primary_key']	= 'DO_H_VBELN';
	}

	function getAllDO($cond){
		$sql = "
				SELECT 
				A.*, 
				B.CUST_NUMBER, B.CUST_GROUP 
				FROM ". $this->data['table_name'] . "
				LEFT JOIN ". LEGACY_MDM .".V_ALL_CUSTOMER B ON A.H_KUNAG = B.CUST_NUMBER
				WHERE 1 = 1 
		";

		if(isset($cond['CUST_GROUP']) && isNotNullAndEmpty($cond['CUST_GROUP'])){
			$sql .= " AND B.CUST_GROUP = '". $cond['CUST_GROUP'] . "'";
		}

		if(isset($cond['H_KUNAG']) && isNotNullAndEmpty($cond['H_KUNAG'])){
			$sql .= " AND A.H_KUNAG = '". $cond['H_KUNAG'] . "'";
		}

		if(isset($cond['JENIS_PENGIRIMAN']) && isNotNullAndEmpty($cond['JENIS_PENGIRIMAN'])){
			$sql .= " AND A.DO_H_INCO1 = '". $cond['JENIS_PENGIRIMAN'] . "'";
		}

		if(isset($cond['STATUS']) && isNotNullAndEmpty($cond['STATUS'])){ // Accepted/ Rejected
			$sql .= " AND A.H_STATUS = '". $cond['STATUS'] . "'";
		}


		$sql .= " ORDER BY A.DO_H_VBELN";

		$res = $this->db->query($sql);
		$res = $res->result_array();
		
		if(count($res) <= 0){
			$res = null;
		}

		return $res;
	}

	function getDetailDO($cond){
		$sql = "
				SELECT 
				A.*, 
				B.*,
				C.CUST_NUMBER AS KODE_DISTRIBUTOR, C.NAME1 AS NAMA_DISTRIBUTOR, 
				COALESCE(C.ADDRESS2, C.ADDRESS1) AS ALAMAT_DISTRIBUTOR
				FROM ". $this->data['table_name'] . "
				LEFT JOIN ". LEGACY_MDM .".V_ALL_CUSTOMER B ON A.DO_H_KUNNR = B.CUST_NUMBER
				LEFT JOIN ". LEGACY_MDM .".V_ALL_CUSTOMER C ON A.DO_H_KUNAG = C.CUST_NUMBER
				LEFT JOIN ". LEGACY .".POD_TRACKING D ON D.NOMOR_DO = A.DO_H_VBELN
				WHERE 1 = 1 
		";

		if(isset($cond['CUST_GROUP']) && isNotNullAndEmpty($cond['CUST_GROUP'])){
			$sql .= " AND B.CUST_GROUP = '". $cond['CUST_GROUP'] . "'";
		}

		if(isset($cond['H_KUNAG']) && isNotNullAndEmpty($cond['H_KUNAG'])){
			$sql .= " AND A.H_KUNAG = '". $cond['H_KUNAG'] . "'";
		}

		if(isset($cond['JENIS_PENGIRIMAN']) && isNotNullAndEmpty($cond['JENIS_PENGIRIMAN'])){
			$sql .= " AND A.DO_H_INCO1 = '". $cond['JENIS_PENGIRIMAN'] . "'";
		}

		if(isset($cond['STATUS']) && isNotNullAndEmpty($cond['STATUS'])){ // Accepted/ Rejected
			$sql .= " AND A.H_STATUS = '". $cond['STATUS'] . "'";
		}

		if(isset($cond['NOMOR_DO']) && isNotNullAndEmpty($cond['NOMOR_DO'])){
			$sql .= " AND A.DO_H_VBELN = '". $cond['NOMOR_DO'] . "'";
		}


		$sql .= " ORDER BY A.DO_H_VBELN";

		$res = $this->db->query($sql);
		$res = $res->row_array();
		
		if(count($res) <= 0){
			$res = null;
		}

		return $res;
	}

	function getAllNomorDO($cond){
		$sql = "
				SELECT 
				A.DO_H_VBELN NOMOR_DO 
				FROM ". $this->data['table_name'] . "
				LEFT JOIN ". LEGACY_MDM .".V_ALL_CUSTOMER B ON A.H_KUNAG = B.CUST_NUMBER
				WHERE 1 = 1 
		";

		if(isset($cond['CUST_GROUP']) && isNotNullAndEmpty($cond['CUST_GROUP'])){
			$sql .= " AND B.CUST_GROUP = '". $cond['CUST_GROUP'] . "'";
		}

		if(isset($cond['KODE_DISTRIBUTOR']) && isNotNullAndEmpty($cond['KODE_DISTRIBUTOR'])){
			$sql .= " AND A.H_KUNAG = '". $cond['KODE_DISTRIBUTOR'] . "'";
		}

		if(isset($cond['JENIS_PENGIRIMAN']) && isNotNullAndEmpty($cond['JENIS_PENGIRIMAN'])){
			$sql .= " AND A.DO_H_INCO1 = '". $cond['JENIS_PENGIRIMAN'] . "'";
		}

		if(isset($cond['STATUS']) && isNotNullAndEmpty($cond['STATUS'])){ // Accepted/ Rejected
			$sql .= " AND A.H_STATUS = '". $cond['STATUS'] . "'";
		}


		$sql .= " ORDER BY A.DO_H_VBELN DESC";

		$res = $this->db->query($sql);
		$res = $res->result_array();
		
		if(count($res) > 0){
			$data_akhir["clubs"] = [];
			for($i = 0; $i < count($res); $i++){
				$single_data['id'] 		= $res[$i]['NOMOR_DO'];
				array_push($data_akhir["clubs"], $single_data);
			}
			$res = $data_akhir;
		}
		else{
			$res = [];
		}

		return $res;
	}

	function getJumlahDO($cond){
		$sql = "
				SELECT 
				COUNT(A.DO_H_VBELN) JUMLAH 
				FROM ". $this->data['table_name'] . "
				LEFT JOIN ". LEGACY_MDM .".V_ALL_CUSTOMER B ON A.H_KUNAG = B.CUST_NUMBER
				WHERE 1 = 1 
		";

		if(isset($cond['CUST_GROUP']) && isNotNullAndEmpty($cond['CUST_GROUP'])){
			$sql .= " AND B.CUST_GROUP = '". $cond['CUST_GROUP'] . "'";
		}

		if(isset($cond['KODE_DISTRIBUTOR']) && isNotNullAndEmpty($cond['KODE_DISTRIBUTOR'])){
			$sql .= " AND A.H_KUNAG = '". $cond['KODE_DISTRIBUTOR'] . "'";
		}

		if(isset($cond['JENIS_PENGIRIMAN']) && isNotNullAndEmpty($cond['JENIS_PENGIRIMAN'])){
			$sql .= " AND A.DO_H_INCO1 = '". $cond['JENIS_PENGIRIMAN'] . "'";
		}

		if(isset($cond['STATUS']) && isNotNullAndEmpty($cond['STATUS'])){ // Accepted/ Rejected
			$sql .= " AND A.H_STATUS = '". $cond['STATUS'] . "'";
		}

		$sql .= " AND A.DO_H_VBELN NOT IN (SELECT NOMOR_DO FROM ". LEGACY .".POD_TRACKING WHERE KODE_DISTRIBUTOR = '". $cond['KODE_DISTRIBUTOR'] ."')";

		$sql .= " ORDER BY A.DO_H_VBELN DESC";

		$res = $this->db->query($sql);
		$res = $res->row_array();
		// var_dump($this->db->last_query());exit;
		
		if(count($res) > 0){
			$res = (int) $res['JUMLAH'];
		}
		else{
			$res = 0;
		}

		return $res;
	}

	public function getAllDOToko($filter, $sort = null){
		$selection 	= 'A.DO_H_VBELN NOMOR_DO';
		$where 		= $this->generateWhereTable($filter);
		$join 		= $this->generateJoinTable($filter);
		$result 	= null;
		$result 	= parent::getAllData($this->data['table_name'], $selection, $where, $sort, $join);

		return $result;
	}

	public function getAllDOTokoCheckOut($filter, $sort = null){
		$selection 	= 'A.DO_H_VBELN NOMOR_DO';
		$where 		= $this->generateWhereTable($filter);
		$join 		= $this->generateJoinTable2($filter);
		$result 	= null;
		$distinct 	= true;
		$result 	= parent::getAllData($this->data['table_name'], $selection, $where, $sort, $join, null, null, null, $distinct);

		return $result;
	}

	private function generateJoinTable(){
		$join[] = array(
			"join_table" 		=> "(SELECT * FROM  ". LEGACY_MDM .".V_ALL_CUSTOMER) B", 
			"join_on" 			=> "A.DO_H_KUNNR = B.CUST_NUMBER", 
			"join_heading" 		=> "LEFT");

		return $join;
	}

	private function generateJoinTable2(){
		$join[] = array(
			"join_table" 		=> "(SELECT * FROM  ". LEGACY_MDM .".V_ALL_CUSTOMER) B", 
			"join_on" 			=> "A.DO_H_KUNNR = B.CUST_NUMBER", 
			"join_heading" 		=> "LEFT");

		$join[] = array(
			"join_table" 		=> "(SELECT * FROM  ". LEGACY .".POD_TRACKING) C", 
			"join_on" 			=> "C.NOMOR_DO = A.DO_H_VBELN", 
			"join_heading" 		=> "INNER JOIN");

		return $join;
	}		

	private function generateWhereTable($filter){
      	$where = null;

      	if(isset($filter["CUST_GROUP"]) && isNotNullAndEmpty($filter["CUST_GROUP"])){
      		$where[] = array("EQUAL", "A.CUST_GROUP", $filter["CUST_GROUP"]);  
      	}

      	if(isset($filter["KODE_TOKO"]) && isNotNullAndEmpty($filter["KODE_TOKO"])){
      		$where[] = array("EQUAL", "A.DO_H_KUNNR", $filter["KODE_TOKO"]);  
      	}

      	if(isset($filter["KODE_DISTRIBUTOR"]) && isNotNullAndEmpty($filter["KODE_DISTRIBUTOR"])){
      		$where[] = array("EQUAL", "A.DO_H_KUNAG", $filter["KODE_DISTRIBUTOR"]);  
      	}

      	if(isset($filter["NOMOR_DO"]) && isNotNullAndEmpty($filter["NOMOR_DO"])){
      		$where[] = array("EQUAL", "A.DO_H_VBELN", $filter["NOMOR_DO"]);  
      	}

      	if(isset($filter["JENIS_PENGIRIMAN"]) && isNotNullAndEmpty($filter["JENIS_PENGIRIMAN"])){
      		$where[] = array("EQUAL", "A.DO_H_INCO1", $filter["JENIS_PENGIRIMAN"]);  
      	}

      	if(isset($filter["STATUS"]) && isNotNullAndEmpty($filter["STATUS"])){
      		$where[] = array("EQUAL", "A.H_STATUS", $filter["STATUS"]);  
      	}

      	if(isset($filter["KODE_TOKO_IN"]) && isNotNullAndEmpty($filter["KODE_TOKO_IN"])){
      		$where[] = array("IN", "A.DO_H_KUNNR", $filter["KODE_TOKO_IN"]);
      	}

      	if(isset($filter["LATITUDE_IS_NOT_NULL"]) && isNotNullAndEmpty($filter["LATITUDE_IS_NOT_NULL"])){
      		$where[] = array("IS_NOT_NULL", "B.LATITUDE");
      	}

      	if(isset($filter["LONGITUDE_IS_NOT_NULL"]) && isNotNullAndEmpty($filter["LONGITUDE_IS_NOT_NULL"])){
      		$where[] = array("IS_NOT_NULL", "B.LONGITUDE");
      	}

      	if(isset($filter["WHERE_MANUAL"]) && isNotNullAndEmpty($filter["WHERE_MANUAL"])){
      		$where[] = array("WHERE_MANUAL", $filter["WHERE_MANUAL"]);
      	}

      	return $where;
	}


	function getAllDOTokoV2($cond){
		$sql = "
				SELECT 
				A.DO_H_VBELN NOMOR_DO 
				FROM ". $this->data['table_name'] . "
				LEFT JOIN ". LEGACY_MDM .".V_ALL_CUSTOMER B ON A.DO_H_KUNNR = B.CUST_NUMBER
				WHERE 1 = 1 
		";

		if(isset($cond['MANUAL']) && isNotNullAndEmpty($cond['MANUAL'])){
			$sql .= " " . $cond['MANUAL'] . " ";
		} 

		$sql .= " ORDER BY A.DO_H_VBELN DESC";

		$res = $this->db->query($sql);
		$res = $res->result_array();
		
		

		return $res;
	}

}

?>