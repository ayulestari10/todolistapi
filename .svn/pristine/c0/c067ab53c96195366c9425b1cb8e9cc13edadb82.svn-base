<?php 
require(APPPATH . 'libraries/Rest.php');

class History extends Rest
{
	public function __construct()
	{
		parent::__construct();
	}

	public function index_get()
	{
		$this->load->model('M_Tracking');
		$kode_distributor = $this->input->get('KODE_DISTRIBUTOR');

		$sort[] 	= array("ID_TRACKING", "DESC");
		$data 		= $this->M_Tracking->getAllTracking(['KODE_DISTRIBUTOR' => $kode_distributor], $sort);
		$data_akhir = [];

		for($i = 0; $i < count($data); $i++){
			$data_akhir []= [
				'ID_TRACKING'	=> isNotNullAndEmpty($data[$i]['ID_TRACKING'])? $data[$i]['ID_TRACKING'] : '',
				'NOMOR_DO'		=> isNotNullAndEmpty($data[$i]['NOMOR_DO'])? $data[$i]['NOMOR_DO'] : '',
				'JUMLAH' 		=> isNotNullAndEmpty($data[$i]['DO_LFIMG'])? str_replace('.000', '', $data[$i]['DO_LFIMG']) . '' . $data[$i]['DO_MEINS']  : '',
			];
		}

		$this->response($data_akhir);
	}

	public function getHistoryBy_get()
	{
		$this->load->model('M_Tracking');
		$kode_distributor 	= $this->input->get('KODE_DISTRIBUTOR');
		$tanggal 			= date('d-m-Y', strtotime($this->input->get('TANGGAL')));
		$kode_toko 			= $this->input->get('KODE_TOKO');

		$sort[] 	= array("ID_TRACKING", "DESC");
		$data 		= $this->M_Tracking->getAllTracking(['KODE_DISTRIBUTOR' => $kode_distributor, 'KODE_TOKO' => $kode_toko, 'TANGGAL' => $tanggal], $sort);
		$data_akhir = [];
		// var_dump($this->db->last_query());exit;

		for($i = 0; $i < count($data); $i++){
			$data_akhir []= [
				'ID_TRACKING'	=> isNotNullAndEmpty($data[$i]['ID_TRACKING'])? $data[$i]['ID_TRACKING'] : '',
				'NOMOR_DO'		=> isNotNullAndEmpty($data[$i]['NOMOR_DO'])? $data[$i]['NOMOR_DO'] : '',
				'JUMLAH' 		=> isNotNullAndEmpty($data[$i]['DO_LFIMG'])? str_replace('.000', '', $data[$i]['DO_LFIMG']) . '' . $data[$i]['DO_MEINS']  : '',
			];
		}

		$this->response($data_akhir);
	}


	public function toko_get()
	{
		$this->load->model('M_Tracking');
		$kode_distributor 	= $this->input->get('KODE_DISTRIBUTOR');
		$data 				= $this->M_Tracking->getAllToko(['KODE_DISTRIBUTOR' => $kode_distributor]);
		$data_akhir 		= [];

		for($i = 0; $i < count($data); $i++){
			$data_akhir []= [
				'NAMA_TOKO'		=> isNotNullAndEmpty($data[$i]['NAMA_TOKO'])? $data[$i]['NAMA_TOKO'] : '',
				'KODE_TOKO'		=> isNotNullAndEmpty($data[$i]['KODE_TOKO'])? $data[$i]['KODE_TOKO'] : '',
			];
		}

		$this->response($data_akhir);
	}
}

?>