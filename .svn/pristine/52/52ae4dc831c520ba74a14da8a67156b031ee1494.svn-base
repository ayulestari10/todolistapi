<?php 
require(APPPATH . 'libraries/Rest.php');

class Auth extends Rest
{
	public function __construct()
	{
		parent::__construct();

		$this->currentDate = date('Y-m-d');
		$this->currentTime = date('H:i:s');

		$this->data = [
			'code'		=> OK,
			'status'	=> 'OK',
			'message'	=> 'Request success',
			'metadata'	=> [
				'current_date'		=> $this->currentDate,
				'current_time'		=> $this->currentTime,
				'start_microtime'	=> microtime(TRUE)
			]
		];
	}

	public function index_post()
	{
		$this->load->model('M_VALLCustomer');

		$genUser 		= strtoupper($this->post('USER'));
		$genPassword	= $this->post('PASSWORD');
     	$genPassword 	= str_replace(" ", "%20", $genPassword);

		$url = API_URL."get/checkLogin/?i=".API_ID."&t=".API_TOKEN."&p=".$genUser."||".$genPassword."||".APPS_CODE;
		// var_dump($url);exit;

		$json = file_get_contents($url);
		$result = json_decode($json);

		if($result != null && $result->metadata->status == 200)
		{
			if(count($result->response) > 0)
			{
				$user = $result->response;
				$this->load->library('ci_jwt');
				$datetime = new DateTime('+30days');

				// get data customer
				$data_customer = $this->M_VALLCustomer->get_row(['CUST_NUMBER' => $user->GEN_REF_CODE2]);

				$payload = [
					'GEN_USER'					=> $user->GEN_USER,
					'GEN_NAME'					=> $user->GEN_NAME,
					'EMAIL'						=> $user->EMAIL,
					// 'PHOTO'						=> $user->PHOTO,
					'GEN_REF_CODE1'				=> $user->GEN_REF_CODE1,
					'GEN_REF_CODE2'				=> $user->GEN_REF_CODE1,
					// 'GEN_REF_CODE3'				=> $user->GEN_REF_CODE3,
					// 'PHONE'						=> $user->PHONE,
					'EXPIRED_AT'				=> $datetime->format('Y-m-d H:i:s'),
					'GEN_GROUP'					=> $user->GEN_GROUP,
					'GEN_GROUP_DESCRIPTION'		=> $user->GEN_GROUP_DESCRIPTION,
					'NAMA_DISTRIBUTOR'			=> isset($data_customer['NAME1'])? isNotNullAndEmpty($data_customer['NAME1'])? $data_customer['NAME1'] : $data_customer['NAME2'] : '-' ,
					'ALAMAT_DISTRIBUTOR'		=> isNotNullAndEmpty($data_customer['ADDRESS1'])? $data_customer['ADDRESS1'] : $data_customer['ADDRESS2'] ,
					'CITY'						=> isNotNullAndEmpty($data_customer['CITY'])? $data_customer['CITY'] : '',
					'REGION'					=> isNotNullAndEmpty($data_customer['J_REGION_DESC'])? $data_customer['J_REGION_DESC'] : '',
					'DISTRICT'					=> isNotNullAndEmpty($data_customer['J_DISTRICT_DESC'])? $data_customer['J_DISTRICT_DESC'] : '',
					'SUB_DISTRICT'				=> isNotNullAndEmpty($data_customer['SUB_DISTRICT_TEXT'])? $data_customer['SUB_DISTRICT_TEXT'] : '',
					'CUST_NUMBER'				=> isNotNullAndEmpty($data_customer['CUST_NUMBER'])? strval((int) $data_customer['CUST_NUMBER']) : ''
				];

				$token = $this->ci_jwt->encode($payload);
				$payload['token'] 		= $token;
				$this->data['payload']	= $payload;				
			}
			else
			{
				$this->data = [
					'code'		=> OK,
					'status'	=> 'failed',
					'message'	=> 'User atau password yang anda masukkan salah'
				];	
			}
		}
		else
		{
			$this->data = [
				'code'		=> OK,
				'status'	=> 'failed',
				'message'	=> 'User atau password yang anda masukkan salah'
			];
		}

		$this->response($this->data, $this->data['code']);
	}
}